/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulator;

import java.io.IOException;
import javax.swing.JPanel;

/**
 *
 * @author behnish
 */
public class Performance extends javax.swing.JPanel {

    /**
     * Creates new form Performance
     */
    private PerformanceCalculation c;

    public Performance() throws IOException {
        initComponents();
        c = new PerformanceCalculation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        performanceMetric = new javax.swing.JComboBox();
        show = new javax.swing.JButton();
        type = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        message = new javax.swing.JTextField();
        content = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        performanceMetric.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Wait Time", "Wait Time 1", "Wait Time 2", "Operation Room Utilization", "Surgon Operation Count", "Waiting Queue", "Cost Anaylsis" }));

        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minimum", "Maximum", "Average" }));

        jLabel1.setText("Total Cost");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(show)
                    .addComponent(performanceMetric, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(message))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(performanceMetric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(show)
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(307, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.LINE_END);

        content.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 737, Short.MAX_VALUE)
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
        );

        add(content, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    JPanel chartPanel;
    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        switch (performanceMetric.getSelectedItem().toString()) {
            case "Wait Time 1":
                switch (type.getSelectedItem().toString()) {
                    case "Average":
                        chartPanel = c.waitTime1();
                        break;
                    case "Minimum":
                        chartPanel = c.minmaxwaitTime1(true);
                        break;
                    case "Maximum":
                        chartPanel = c.minmaxwaitTime1(false);
                        break;
                }
                break;
            case "Wait Time 2":
                switch (type.getSelectedItem().toString()) {
                    case "Average":
                        chartPanel = c.waitTime2();
                        break;
                    case "Minimum":
                        chartPanel = c.minmaxwaitTime2(true);
                        break;
                    case "Maximum":
                        chartPanel = c.minmaxwaitTime2(false);
                        break;
                }
                break;
            case "Wait Time":
                chartPanel = c.waitTime();
                break;
            case "Operation Room Utilization":
                chartPanel = c.operationRoom();
                break;
            case "Surgon Operation Count":
                chartPanel = c.surgeonOperation();
                break;
            case "Waiting Queue":
                chartPanel = c.waitingQueueSurgeon();
                break;
            case "Cost Anaylsis":
                //chartPanel = c.costAnaylsis();
                //message.setText(String.valueOf(c.getTotalCost())+"\n");
                chartPanel = c.cost2();
                break;
            case "Total Cost":
                chartPanel = c.costAnaylsis();
                message.setText(String.valueOf(c.getTotalCost())+"\n");
                break;
        }

        if (chartPanel != null) {
            content.removeAll();
            chartPanel.setBounds(10, 10, content.getWidth() - 20, content.getHeight() - 20);
            content.add(chartPanel);
            content.updateUI();
        }

    }//GEN-LAST:event_showActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel content;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField message;
    private javax.swing.JComboBox performanceMetric;
    private javax.swing.JButton show;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
}
